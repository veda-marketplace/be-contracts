{"abi":[{"type":"function","name":"acceptSubscriptionOwnerTransfer","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addConsumer","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"consumer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelSubscription","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createSubscription","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSubscriptionWithConsumer","inputs":[{"name":"consumer","type":"address","internalType":"address"}],"outputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getConsumer","inputs":[{"name":"client","type":"address","internalType":"address"},{"name":"subscriptionId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IFunctionsSubscriptions.Consumer","components":[{"name":"allowed","type":"bool","internalType":"bool"},{"name":"initiatedRequests","type":"uint64","internalType":"uint64"},{"name":"completedRequests","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"getFlags","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getSubscription","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IFunctionsSubscriptions.Subscription","components":[{"name":"balance","type":"uint96","internalType":"uint96"},{"name":"owner","type":"address","internalType":"address"},{"name":"blockedBalance","type":"uint96","internalType":"uint96"},{"name":"proposedOwner","type":"address","internalType":"address"},{"name":"consumers","type":"address[]","internalType":"address[]"},{"name":"flags","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"getSubscriptionCount","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getSubscriptionsInRange","inputs":[{"name":"subscriptionIdStart","type":"uint64","internalType":"uint64"},{"name":"subscriptionIdEnd","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IFunctionsSubscriptions.Subscription[]","components":[{"name":"balance","type":"uint96","internalType":"uint96"},{"name":"owner","type":"address","internalType":"address"},{"name":"blockedBalance","type":"uint96","internalType":"uint96"},{"name":"proposedOwner","type":"address","internalType":"address"},{"name":"consumers","type":"address[]","internalType":"address[]"},{"name":"flags","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"getTotalBalance","inputs":[],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"oracleWithdraw","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint96","internalType":"uint96"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ownerCancelSubscription","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pendingRequestExists","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proposeSubscriptionOwnerTransfer","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recoverFunds","inputs":[{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeConsumer","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"consumer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFlags","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"flags","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"timeoutRequests","inputs":[{"name":"requestsToTimeoutByCommitment","type":"tuple[]","internalType":"struct FunctionsResponse.Commitment[]","components":[{"name":"requestId","type":"bytes32","internalType":"bytes32"},{"name":"coordinator","type":"address","internalType":"address"},{"name":"estimatedTotalCostJuels","type":"uint96","internalType":"uint96"},{"name":"client","type":"address","internalType":"address"},{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"callbackGasLimit","type":"uint32","internalType":"uint32"},{"name":"adminFee","type":"uint72","internalType":"uint72"},{"name":"donFee","type":"uint72","internalType":"uint72"},{"name":"gasOverheadBeforeCallback","type":"uint40","internalType":"uint40"},{"name":"gasOverheadAfterCallback","type":"uint40","internalType":"uint40"},{"name":"timeoutTimestamp","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","createSubscriptionWithConsumer(address)":"cc77470a","getConsumer(address,uint64)":"674603d0","getFlags(uint64)":"55fedefa","getSubscription(uint64)":"a47c7696","getSubscriptionCount()":"66419970","getSubscriptionsInRange(uint64,uint64)":"ec2454e5","getTotalBalance()":"12b58349","oracleWithdraw(address,uint96)":"66316d8d","ownerCancelSubscription(uint64)":"02bcc5b6","pendingRequestExists(uint64)":"e82ad7d4","proposeSubscriptionOwnerTransfer(uint64,address)":"4b8832d3","recoverFunds(address)":"e72f6e30","removeConsumer(uint64,address)":"9f87fad7","setFlags(uint64,bytes32)":"1ded3b36","timeoutRequests((bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32)[])":"e82622aa"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"createSubscriptionWithConsumer\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"name\":\"getConsumer\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"initiatedRequests\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"completedRequests\",\"type\":\"uint64\"}],\"internalType\":\"struct IFunctionsSubscriptions.Consumer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"name\":\"getFlags\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"blockedBalance\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"},{\"internalType\":\"bytes32\",\"name\":\"flags\",\"type\":\"bytes32\"}],\"internalType\":\"struct IFunctionsSubscriptions.Subscription\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubscriptionCount\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionIdStart\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionIdEnd\",\"type\":\"uint64\"}],\"name\":\"getSubscriptionsInRange\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"blockedBalance\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"},{\"internalType\":\"bytes32\",\"name\":\"flags\",\"type\":\"bytes32\"}],\"internalType\":\"struct IFunctionsSubscriptions.Subscription[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"oracleWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"proposeSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"flags\",\"type\":\"bytes32\"}],\"name\":\"setFlags\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"estimatedTotalCostJuels\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"donFee\",\"type\":\"uint72\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadBeforeCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadAfterCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"timeoutTimestamp\",\"type\":\"uint32\"}],\"internalType\":\"struct FunctionsResponse.Commitment[]\",\"name\":\"requestsToTimeoutByCommitment\",\"type\":\"tuple[]\"}],\"name\":\"timeoutRequests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subscriptionId has not requested that msg.sender become the new owner.\",\"params\":{\"subscriptionId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"details\":\"Only callable by the Subscription's owner\",\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subscriptionId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"details\":\"Only callable by the Subscription's owner\",\"params\":{\"subscriptionId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(ROUTER),amount,abi.encode(subscriptionId));\",\"returns\":{\"_0\":\"subscriptionId - A unique subscription id.\"}},\"createSubscriptionWithConsumer(address)\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(ROUTER),amount,abi.encode(subscriptionId));\",\"returns\":{\"subscriptionId\":\"- A unique subscription id.\"}},\"getConsumer(address,uint64)\":{\"params\":{\"client\":\"- the consumer contract address\",\"subscriptionId\":\"- the ID of the subscription\"},\"returns\":{\"_0\":\"consumer - see IFunctionsSubscriptions.Consumer for more information on the structure\"}},\"getFlags(uint64)\":{\"params\":{\"subscriptionId\":\"- ID of the subscription\"},\"returns\":{\"_0\":\"flags - current flag values\"}},\"getSubscription(uint64)\":{\"params\":{\"subscriptionId\":\"- the ID of the subscription\"},\"returns\":{\"_0\":\"subscription - see IFunctionsSubscriptions.Subscription for more information on the structure\"}},\"getSubscriptionCount()\":{\"returns\":{\"_0\":\"count - total number of subscriptions in the system\"}},\"getSubscriptionsInRange(uint64,uint64)\":{\"params\":{\"subscriptionIdEnd\":\"- the ID of the subscription to end the range at\",\"subscriptionIdStart\":\"- the ID of the subscription to start the range at\"},\"returns\":{\"_0\":\"subscriptions - see IFunctionsSubscriptions.Subscription for more information on the structure\"}},\"getTotalBalance()\":{\"returns\":{\"_0\":\"totalBalance - total Juels of LINK held by the contract\"}},\"oracleWithdraw(address,uint96)\":{\"params\":{\"amount\":\"amount to withdraw\",\"recipient\":\"where to send the funds\"}},\"ownerCancelSubscription(uint64)\":{\"details\":\"Only callable by the Router Ownernotably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subscriptionId\":\"subscription id\"}},\"pendingRequestExists(uint64)\":{\"details\":\"Looping is bounded to MAX_CONSUMERS*(number of DONs).Used to disable subscription canceling while outstanding request are present.\",\"params\":{\"subscriptionId\":\"- ID of the subscription\"},\"returns\":{\"_0\":\"true if there exists at least one unfulfilled request for the subscription, false otherwise.\"}},\"proposeSubscriptionOwnerTransfer(uint64,address)\":{\"details\":\"Only callable by the Subscription's owner\",\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subscriptionId\":\"- ID of the subscription\"}},\"recoverFunds(address)\":{\"details\":\"Only callable by the Router Owner\",\"params\":{\"to\":\"address to send link to\"}},\"removeConsumer(uint64,address)\":{\"details\":\"Only callable by the Subscription's owner\",\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subscriptionId\":\"- ID of the subscription\"}},\"setFlags(uint64,bytes32)\":{\"params\":{\"flags\":\"- desired flag values\",\"subscriptionId\":\"- ID of the subscription\"}},\"timeoutRequests((bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32)[])\":{\"details\":\"The commitment can be found on the \\\"OracleRequest\\\" event created when sending the request.\",\"params\":{\"requestsToTimeoutByCommitment\":\"- A list of request commitments to time out\"}}},\"title\":\"Chainlink Functions Subscription interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Accept an ownership transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a Chainlink Functions subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a new subscription.\"},\"createSubscriptionWithConsumer(address)\":{\"notice\":\"Create a new subscription and add a consumer.\"},\"getConsumer(address,uint64)\":{\"notice\":\"Get details about a consumer of a subscription.\"},\"getFlags(uint64)\":{\"notice\":\"Get flags for a given subscription.\"},\"getSubscription(uint64)\":{\"notice\":\"Get details about a subscription.\"},\"getSubscriptionCount()\":{\"notice\":\"Get details about the total number of subscription accounts\"},\"getSubscriptionsInRange(uint64,uint64)\":{\"notice\":\"Retrieve details about multiple subscriptions using an inclusive range\"},\"getTotalBalance()\":{\"notice\":\"Get details about the total amount of LINK within the system\"},\"oracleWithdraw(address,uint96)\":{\"notice\":\"Oracle withdraw LINK earned through fulfilling requestsIf amount is 0 the full balance will be withdrawnBoth signing and transmitting wallets will have a balance to withdraw\"},\"ownerCancelSubscription(uint64)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"pendingRequestExists(uint64)\":{\"notice\":\"Check to see if there exists a request commitment for all consumers for a given sub.\"},\"proposeSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Propose a new owner for a subscription.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a Chainlink Functions subscription.\"},\"setFlags(uint64,bytes32)\":{\"notice\":\"Set subscription specific flags for a subscription. Each byte of the flag is used to represent a resource tier that the subscription can utilize.\"},\"timeoutRequests((bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32)[])\":{\"notice\":\"Time out all expired requests: unlocks funds and removes the ability for the request to be fulfilled\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsSubscriptions.sol\":\"IFunctionsSubscriptions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsSubscriptions.sol\":{\"keccak256\":\"0xab83613f1bb1cbdbf15fdbb6382259e2b2678bfe5a3a6dab976cdf2337f1f94e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0775cd55699e89e5f3df452de2c2273e00e51d79feb2b0c2d36e856cfeb1bd4b\",\"dweb:/ipfs/QmQDoC1hJhYYEg8SZouhkZ5BgC7mhqn4Ymgo5tvV3iYUgg\"]},\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0x219b5272fd44aeade22130bb9b57b748950febb2f406d5e813ddaa14cd98147c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7b1d4d5fd839fb620c7f230a7d9d957bba6efbdec6964362c6603211b902ccc\",\"dweb:/ipfs/QmXAAGcbJP4GSpjBqc9Z8KA5wwdv6Q2FsYZt1LP2GM5AJT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"acceptSubscriptionOwnerTransfer"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addConsumer"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cancelSubscription"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"createSubscription","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"consumer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createSubscriptionWithConsumer","outputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"client","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getConsumer","outputs":[{"internalType":"struct IFunctionsSubscriptions.Consumer","name":"","type":"tuple","components":[{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint64","name":"initiatedRequests","type":"uint64"},{"internalType":"uint64","name":"completedRequests","type":"uint64"}]}]},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getFlags","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getSubscription","outputs":[{"internalType":"struct IFunctionsSubscriptions.Subscription","name":"","type":"tuple","components":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint96","name":"blockedBalance","type":"uint96"},{"internalType":"address","name":"proposedOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"},{"internalType":"bytes32","name":"flags","type":"bytes32"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSubscriptionCount","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"uint64","name":"subscriptionIdStart","type":"uint64"},{"internalType":"uint64","name":"subscriptionIdEnd","type":"uint64"}],"stateMutability":"view","type":"function","name":"getSubscriptionsInRange","outputs":[{"internalType":"struct IFunctionsSubscriptions.Subscription[]","name":"","type":"tuple[]","components":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint96","name":"blockedBalance","type":"uint96"},{"internalType":"address","name":"proposedOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"},{"internalType":"bytes32","name":"flags","type":"bytes32"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getTotalBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint96","name":"amount","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"oracleWithdraw"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"ownerCancelSubscription"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"}],"stateMutability":"view","type":"function","name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"proposeSubscriptionOwnerTransfer"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"recoverFunds"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeConsumer"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"flags","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setFlags"},{"inputs":[{"internalType":"struct FunctionsResponse.Commitment[]","name":"requestsToTimeoutByCommitment","type":"tuple[]","components":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"address","name":"coordinator","type":"address"},{"internalType":"uint96","name":"estimatedTotalCostJuels","type":"uint96"},{"internalType":"address","name":"client","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint72","name":"adminFee","type":"uint72"},{"internalType":"uint72","name":"donFee","type":"uint72"},{"internalType":"uint40","name":"gasOverheadBeforeCallback","type":"uint40"},{"internalType":"uint40","name":"gasOverheadAfterCallback","type":"uint40"},{"internalType":"uint32","name":"timeoutTimestamp","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"timeoutRequests"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subscriptionId has not requested that msg.sender become the new owner.","params":{"subscriptionId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"details":"Only callable by the Subscription's owner","params":{"consumer":"- New consumer which can use the subscription","subscriptionId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"details":"Only callable by the Subscription's owner","params":{"subscriptionId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(ROUTER),amount,abi.encode(subscriptionId));","returns":{"_0":"subscriptionId - A unique subscription id."}},"createSubscriptionWithConsumer(address)":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(ROUTER),amount,abi.encode(subscriptionId));","returns":{"subscriptionId":"- A unique subscription id."}},"getConsumer(address,uint64)":{"params":{"client":"- the consumer contract address","subscriptionId":"- the ID of the subscription"},"returns":{"_0":"consumer - see IFunctionsSubscriptions.Consumer for more information on the structure"}},"getFlags(uint64)":{"params":{"subscriptionId":"- ID of the subscription"},"returns":{"_0":"flags - current flag values"}},"getSubscription(uint64)":{"params":{"subscriptionId":"- the ID of the subscription"},"returns":{"_0":"subscription - see IFunctionsSubscriptions.Subscription for more information on the structure"}},"getSubscriptionCount()":{"returns":{"_0":"count - total number of subscriptions in the system"}},"getSubscriptionsInRange(uint64,uint64)":{"params":{"subscriptionIdEnd":"- the ID of the subscription to end the range at","subscriptionIdStart":"- the ID of the subscription to start the range at"},"returns":{"_0":"subscriptions - see IFunctionsSubscriptions.Subscription for more information on the structure"}},"getTotalBalance()":{"returns":{"_0":"totalBalance - total Juels of LINK held by the contract"}},"oracleWithdraw(address,uint96)":{"params":{"amount":"amount to withdraw","recipient":"where to send the funds"}},"ownerCancelSubscription(uint64)":{"details":"Only callable by the Router Ownernotably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subscriptionId":"subscription id"}},"pendingRequestExists(uint64)":{"details":"Looping is bounded to MAX_CONSUMERS*(number of DONs).Used to disable subscription canceling while outstanding request are present.","params":{"subscriptionId":"- ID of the subscription"},"returns":{"_0":"true if there exists at least one unfulfilled request for the subscription, false otherwise."}},"proposeSubscriptionOwnerTransfer(uint64,address)":{"details":"Only callable by the Subscription's owner","params":{"newOwner":"- proposed new owner of the subscription","subscriptionId":"- ID of the subscription"}},"recoverFunds(address)":{"details":"Only callable by the Router Owner","params":{"to":"address to send link to"}},"removeConsumer(uint64,address)":{"details":"Only callable by the Subscription's owner","params":{"consumer":"- Consumer to remove from the subscription","subscriptionId":"- ID of the subscription"}},"setFlags(uint64,bytes32)":{"params":{"flags":"- desired flag values","subscriptionId":"- ID of the subscription"}},"timeoutRequests((bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32)[])":{"details":"The commitment can be found on the \"OracleRequest\" event created when sending the request.","params":{"requestsToTimeoutByCommitment":"- A list of request commitments to time out"}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Accept an ownership transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a Chainlink Functions subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a new subscription."},"createSubscriptionWithConsumer(address)":{"notice":"Create a new subscription and add a consumer."},"getConsumer(address,uint64)":{"notice":"Get details about a consumer of a subscription."},"getFlags(uint64)":{"notice":"Get flags for a given subscription."},"getSubscription(uint64)":{"notice":"Get details about a subscription."},"getSubscriptionCount()":{"notice":"Get details about the total number of subscription accounts"},"getSubscriptionsInRange(uint64,uint64)":{"notice":"Retrieve details about multiple subscriptions using an inclusive range"},"getTotalBalance()":{"notice":"Get details about the total amount of LINK within the system"},"oracleWithdraw(address,uint96)":{"notice":"Oracle withdraw LINK earned through fulfilling requestsIf amount is 0 the full balance will be withdrawnBoth signing and transmitting wallets will have a balance to withdraw"},"ownerCancelSubscription(uint64)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"pendingRequestExists(uint64)":{"notice":"Check to see if there exists a request commitment for all consumers for a given sub."},"proposeSubscriptionOwnerTransfer(uint64,address)":{"notice":"Propose a new owner for a subscription."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a Chainlink Functions subscription."},"setFlags(uint64,bytes32)":{"notice":"Set subscription specific flags for a subscription. Each byte of the flag is used to represent a resource tier that the subscription can utilize."},"timeoutRequests((bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32)[])":{"notice":"Time out all expired requests: unlocks funds and removes the ability for the request to be fulfilled"}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsSubscriptions.sol":"IFunctionsSubscriptions"},"evmVersion":"paris","libraries":{}},"sources":{"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsSubscriptions.sol":{"keccak256":"0xab83613f1bb1cbdbf15fdbb6382259e2b2678bfe5a3a6dab976cdf2337f1f94e","urls":["bzz-raw://0775cd55699e89e5f3df452de2c2273e00e51d79feb2b0c2d36e856cfeb1bd4b","dweb:/ipfs/QmQDoC1hJhYYEg8SZouhkZ5BgC7mhqn4Ymgo5tvV3iYUgg"],"license":"MIT"},"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/libraries/FunctionsResponse.sol":{"keccak256":"0x219b5272fd44aeade22130bb9b57b748950febb2f406d5e813ddaa14cd98147c","urls":["bzz-raw://a7b1d4d5fd839fb620c7f230a7d9d957bba6efbdec6964362c6603211b902ccc","dweb:/ipfs/QmXAAGcbJP4GSpjBqc9Z8KA5wwdv6Q2FsYZt1LP2GM5AJT"],"license":"MIT"}},"version":1},"id":26}