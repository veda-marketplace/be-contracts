{"abi":[{"type":"function","name":"fulfill","inputs":[{"name":"response","type":"bytes","internalType":"bytes"},{"name":"err","type":"bytes","internalType":"bytes"},{"name":"juelsPerGas","type":"uint96","internalType":"uint96"},{"name":"costWithoutFulfillment","type":"uint96","internalType":"uint96"},{"name":"transmitter","type":"address","internalType":"address"},{"name":"commitment","type":"tuple","internalType":"struct FunctionsResponse.Commitment","components":[{"name":"requestId","type":"bytes32","internalType":"bytes32"},{"name":"coordinator","type":"address","internalType":"address"},{"name":"estimatedTotalCostJuels","type":"uint96","internalType":"uint96"},{"name":"client","type":"address","internalType":"address"},{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"callbackGasLimit","type":"uint32","internalType":"uint32"},{"name":"adminFee","type":"uint72","internalType":"uint72"},{"name":"donFee","type":"uint72","internalType":"uint72"},{"name":"gasOverheadBeforeCallback","type":"uint40","internalType":"uint40"},{"name":"gasOverheadAfterCallback","type":"uint40","internalType":"uint40"},{"name":"timeoutTimestamp","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"uint8","internalType":"enum FunctionsResponse.FulfillResult"},{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"nonpayable"},{"type":"function","name":"getAdminFee","inputs":[],"outputs":[{"name":"adminFee","type":"uint72","internalType":"uint72"}],"stateMutability":"view"},{"type":"function","name":"getAllowListId","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getContractById","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getProposedContractById","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getProposedContractSet","inputs":[],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"},{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"isValidCallbackGasLimit","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"callbackGasLimit","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"proposeContractsUpdate","inputs":[{"name":"proposalSetIds","type":"bytes32[]","internalType":"bytes32[]"},{"name":"proposalSetAddresses","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sendRequest","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"dataVersion","type":"uint16","internalType":"uint16"},{"name":"callbackGasLimit","type":"uint32","internalType":"uint32"},{"name":"donId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sendRequestToProposed","inputs":[{"name":"subscriptionId","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"dataVersion","type":"uint16","internalType":"uint16"},{"name":"callbackGasLimit","type":"uint32","internalType":"uint32"},{"name":"donId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"setAllowListId","inputs":[{"name":"allowListId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateContracts","inputs":[],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":"33060529","getAdminFee()":"2a905ccc","getAllowListId()":"aab396bd","getContractById(bytes32)":"a9c9a918","getProposedContractById(bytes32)":"6a2215de","getProposedContractSet()":"badc3eb6","isValidCallbackGasLimit(uint64,uint32)":"10fc49c1","pause()":"8456cb59","proposeContractsUpdate(bytes32[],address[])":"3e871e4d","sendRequest(uint64,bytes,uint16,uint32,bytes32)":"461d2762","sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":"41db4ca3","setAllowListId(bytes32)":"ea320e0b","unpause()":"3f4ba83a","updateContracts()":"b734c0f4"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"juelsPerGas\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"costWithoutFulfillment\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"estimatedTotalCostJuels\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"donFee\",\"type\":\"uint72\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadBeforeCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadAfterCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"timeoutTimestamp\",\"type\":\"uint32\"}],\"internalType\":\"struct FunctionsResponse.Commitment\",\"name\":\"commitment\",\"type\":\"tuple\"}],\"name\":\"fulfill\",\"outputs\":[{\"internalType\":\"enum FunctionsResponse.FulfillResult\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminFee\",\"outputs\":[{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowListId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getProposedContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposedContractSet\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"name\":\"isValidCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalSetIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"proposalSetAddresses\",\"type\":\"address[]\"}],\"name\":\"proposeContractsUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequestToProposed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"allowListId\",\"type\":\"bytes32\"}],\"name\":\"setAllowListId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"details\":\"Only callable by the Coordinator contract that is saved in the commitment\",\"params\":{\"commitment\":\"- The parameters of the request that must be held consistent between request and response time\",\"costWithoutFulfillment\":\"- The cost of processing the request (in Juels of LINK ), without fulfillment\",\"err\":\"error from DON consensus\",\"juelsPerGas\":\"- current rate of juels/gas\",\"response\":\"response data from DON consensus\",\"transmitter\":\"- The Node that transmitted the OCR report\"},\"returns\":{\"_0\":\"fulfillResult -\",\"_1\":\"callbackGasCostJuels -\"}},\"getAdminFee()\":{\"returns\":{\"adminFee\":\"adminFee\"}},\"getAllowListId()\":{\"returns\":{\"_0\":\"id - bytes32 id that can be passed to the \\\"getContractById\\\" of the Router\"}},\"getContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current contract address\"}},\"getProposedContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current or proposed contract address\"}},\"getProposedContractSet()\":{\"returns\":{\"_0\":\"ids The identifiers of the contracts to update\",\"_1\":\"to The addresses of the contracts that will be updated to\"}},\"isValidCallbackGasLimit(uint64,uint32)\":{\"params\":{\"callbackGasLimit\":\"desired callback gas limit\",\"subscriptionId\":\"subscription ID\"}},\"pause()\":{\"details\":\"Puts the system into an emergency stopped state.Only callable by owner\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"details\":\"Only callable by owner\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"unpause()\":{\"details\":\"Takes the system out of an emergency stopped state.Only callable by owner\"},\"updateContracts()\":{\"details\":\"Only callable by owner\"}},\"title\":\"Chainlink Functions Router interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"notice\":\"Fulfill the request by: - calling back the data that the Oracle returned to the client contract - pay the DON for processing the request\"},\"getAdminFee()\":{\"notice\":\"Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\"},\"getAllowListId()\":{\"notice\":\"The identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"getContractById(bytes32)\":{\"notice\":\"Get the current contract given an ID\"},\"getProposedContractById(bytes32)\":{\"notice\":\"Get the proposed next contract given an ID\"},\"getProposedContractSet()\":{\"notice\":\"Return the latest proprosal set\"},\"isValidCallbackGasLimit(uint64,uint32)\":{\"notice\":\"Validate requested gas limit is below the subscription max.\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"notice\":\"Proposes one or more updates to the contract routes\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request using the provided subscriptionId\"},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request to the proposed contracts\"},\"setAllowListId(bytes32)\":{\"notice\":\"Set the identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"updateContracts()\":{\"notice\":\"Updates the current contract routes to the proposed contracts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsRouter.sol\":\"IFunctionsRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsSubscriptions.sol\":{\"keccak256\":\"0xab83613f1bb1cbdbf15fdbb6382259e2b2678bfe5a3a6dab976cdf2337f1f94e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0775cd55699e89e5f3df452de2c2273e00e51d79feb2b0c2d36e856cfeb1bd4b\",\"dweb:/ipfs/QmQDoC1hJhYYEg8SZouhkZ5BgC7mhqn4Ymgo5tvV3iYUgg\"]},\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0x219b5272fd44aeade22130bb9b57b748950febb2f406d5e813ddaa14cd98147c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7b1d4d5fd839fb620c7f230a7d9d957bba6efbdec6964362c6603211b902ccc\",\"dweb:/ipfs/QmXAAGcbJP4GSpjBqc9Z8KA5wwdv6Q2FsYZt1LP2GM5AJT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"},{"internalType":"uint96","name":"juelsPerGas","type":"uint96"},{"internalType":"uint96","name":"costWithoutFulfillment","type":"uint96"},{"internalType":"address","name":"transmitter","type":"address"},{"internalType":"struct FunctionsResponse.Commitment","name":"commitment","type":"tuple","components":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"address","name":"coordinator","type":"address"},{"internalType":"uint96","name":"estimatedTotalCostJuels","type":"uint96"},{"internalType":"address","name":"client","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint72","name":"adminFee","type":"uint72"},{"internalType":"uint72","name":"donFee","type":"uint72"},{"internalType":"uint40","name":"gasOverheadBeforeCallback","type":"uint40"},{"internalType":"uint40","name":"gasOverheadAfterCallback","type":"uint40"},{"internalType":"uint32","name":"timeoutTimestamp","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"fulfill","outputs":[{"internalType":"enum FunctionsResponse.FulfillResult","name":"","type":"uint8"},{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAdminFee","outputs":[{"internalType":"uint72","name":"adminFee","type":"uint72"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAllowListId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getContractById","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getProposedContractById","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getProposedContractSet","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"},{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"stateMutability":"view","type":"function","name":"isValidCallbackGasLimit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[{"internalType":"bytes32[]","name":"proposalSetIds","type":"bytes32[]"},{"internalType":"address[]","name":"proposalSetAddresses","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"proposeContractsUpdate"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sendRequest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sendRequestToProposed","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"allowListId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setAllowListId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"updateContracts"}],"devdoc":{"kind":"dev","methods":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":{"details":"Only callable by the Coordinator contract that is saved in the commitment","params":{"commitment":"- The parameters of the request that must be held consistent between request and response time","costWithoutFulfillment":"- The cost of processing the request (in Juels of LINK ), without fulfillment","err":"error from DON consensus","juelsPerGas":"- current rate of juels/gas","response":"response data from DON consensus","transmitter":"- The Node that transmitted the OCR report"},"returns":{"_0":"fulfillResult -","_1":"callbackGasCostJuels -"}},"getAdminFee()":{"returns":{"adminFee":"adminFee"}},"getAllowListId()":{"returns":{"_0":"id - bytes32 id that can be passed to the \"getContractById\" of the Router"}},"getContractById(bytes32)":{"params":{"id":"A bytes32 identifier for the route"},"returns":{"_0":"contract The current contract address"}},"getProposedContractById(bytes32)":{"params":{"id":"A bytes32 identifier for the route"},"returns":{"_0":"contract The current or proposed contract address"}},"getProposedContractSet()":{"returns":{"_0":"ids The identifiers of the contracts to update","_1":"to The addresses of the contracts that will be updated to"}},"isValidCallbackGasLimit(uint64,uint32)":{"params":{"callbackGasLimit":"desired callback gas limit","subscriptionId":"subscription ID"}},"pause()":{"details":"Puts the system into an emergency stopped state.Only callable by owner"},"proposeContractsUpdate(bytes32[],address[])":{"details":"Only callable by owner"},"sendRequest(uint64,bytes,uint16,uint32,bytes32)":{"params":{"callbackGasLimit":"- Gas limit for the fulfillment callback","data":"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request","dataVersion":"- Gas limit for the fulfillment callback","donId":"- An identifier used to determine which route to send the request along","subscriptionId":"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription"},"returns":{"_0":"requestId - A unique request identifier"}},"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":{"params":{"callbackGasLimit":"- Gas limit for the fulfillment callback","data":"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request","dataVersion":"- Gas limit for the fulfillment callback","donId":"- An identifier used to determine which route to send the request along","subscriptionId":"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription"},"returns":{"_0":"requestId - A unique request identifier"}},"unpause()":{"details":"Takes the system out of an emergency stopped state.Only callable by owner"},"updateContracts()":{"details":"Only callable by owner"}},"version":1},"userdoc":{"kind":"user","methods":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":{"notice":"Fulfill the request by: - calling back the data that the Oracle returned to the client contract - pay the DON for processing the request"},"getAdminFee()":{"notice":"Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network"},"getAllowListId()":{"notice":"The identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions"},"getContractById(bytes32)":{"notice":"Get the current contract given an ID"},"getProposedContractById(bytes32)":{"notice":"Get the proposed next contract given an ID"},"getProposedContractSet()":{"notice":"Return the latest proprosal set"},"isValidCallbackGasLimit(uint64,uint32)":{"notice":"Validate requested gas limit is below the subscription max."},"proposeContractsUpdate(bytes32[],address[])":{"notice":"Proposes one or more updates to the contract routes"},"sendRequest(uint64,bytes,uint16,uint32,bytes32)":{"notice":"Sends a request using the provided subscriptionId"},"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":{"notice":"Sends a request to the proposed contracts"},"setAllowListId(bytes32)":{"notice":"Set the identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions"},"updateContracts()":{"notice":"Updates the current contract routes to the proposed contracts"}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsRouter.sol":"IFunctionsRouter"},"evmVersion":"paris","libraries":{}},"sources":{"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsRouter.sol":{"keccak256":"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08","urls":["bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6","dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe"],"license":"MIT"},"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/interfaces/IFunctionsSubscriptions.sol":{"keccak256":"0xab83613f1bb1cbdbf15fdbb6382259e2b2678bfe5a3a6dab976cdf2337f1f94e","urls":["bzz-raw://0775cd55699e89e5f3df452de2c2273e00e51d79feb2b0c2d36e856cfeb1bd4b","dweb:/ipfs/QmQDoC1hJhYYEg8SZouhkZ5BgC7mhqn4Ymgo5tvV3iYUgg"],"license":"MIT"},"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/dev/v1_0_0/libraries/FunctionsResponse.sol":{"keccak256":"0x219b5272fd44aeade22130bb9b57b748950febb2f406d5e813ddaa14cd98147c","urls":["bzz-raw://a7b1d4d5fd839fb620c7f230a7d9d957bba6efbdec6964362c6603211b902ccc","dweb:/ipfs/QmXAAGcbJP4GSpjBqc9Z8KA5wwdv6Q2FsYZt1LP2GM5AJT"],"license":"MIT"}},"version":1},"id":25}